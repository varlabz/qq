#!/bin/bash

[[ $(command -v jq) ]] || { echo "jq is required but not installed. Please install it and try again."; exit 1; }
[[ $(command -v curl) ]] || { echo "curl is required but not installed. Please install it and try again."; exit 1; }

# Load environment variables from .env or/and ~/.config/qq-env
[[ -f ~/.config/qq-env ]] && . ~/.config/qq-env 
[[ -f ./.env ]] && . ./.env 

# Check for required API key
if [[ -z "$LLM_API_KEY" ]]; then
    echo "LLM_API_KEY is not set. Please set it in your .env or environment." >&2
    exit 1
fi

function _message() {
    local json_payload=$(jq -n \
        --arg prompt "$prompt" \
        --arg user "$user_prompt" \
        --arg llm_temperature "${LLM_TEMPERATURE:-0.0}" \
        --arg llm_model "${LLM_MODEL:-gpt-4o-mini}" \
        '{
            "messages": [
                {
                    "role": "system",
                    "content": $prompt
                },
                {
                    "role": "user",
                    "content": $user
                }
            ],
            "stream": false,
            "temperature": ($llm_temperature | tonumber), 
            "model": $llm_model
        }')
    curl -sX POST "${LLM_BASE_URL:-https://api.openai.com/v1/chat/completions}" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $LLM_API_KEY" \
        -d "$json_payload" | jq -r '.choices[0].message.content // .error.message // "unknown error"'
}

prompt=""
user_prompt=""
# If last parameter is '-', read from stdin 
if [[ "${!#}" == "-" ]]; then
    prompt="${*:1:$(($#-1))}"
    if [[ -z "$prompt" ]]; then
        prompt="You are a helpful assistant."
    fi
    user_prompt="$(cat)"
    _message 
    exit 0
fi

if [[ $# -eq 1 ]]; then
    prompt="You are a helpful assistant."
    user_prompt="$1"
    _message 
    exit 0
fi

if [[ $# -gt 1 ]]; then
    prompt="$1"
    shift
    user_prompt="$*"
    _message 
    exit 0
fi

echo "Usage: $0 <prompt> <message>"
echo "       $0 <message>"
exit 1
